---
import type { GetStaticPathsItem, MDXInstance } from "astro";
import Layout from "../../layouts/Layout.astro";
import Article from "../../components/Article.astro";

export async function getStaticPaths(): Promise<GetStaticPathsItem[]> {
  const allPosts: MDXInstance<PostFrontmatter>[] = Object.values(
    import.meta.glob(["../posts/**/*.{md,mdx}", "!../posts/**/_*.{md,mdx}"], {
      eager: true,
    }),
  );
  const sortedPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).getTime() -
      new Date(a.frontmatter.pubDate).getTime(),
  );

  const uniqTags = [
    ...new Set(
      sortedPosts
        .map((a) => a.frontmatter.tags)
        .flat()
        .filter(Boolean),
    ),
  ] as string[];

  return uniqTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag),
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params as { tag: string };
const { posts } = Astro.props as { posts: any[] };

const title = `Today I learned. (${tag})`;
const description = "Sharing what I learned today";
---

<Layout
  title={title}
  description={description}
  tags={tag}
>
  <h1>Today I learned. ({tag})</h1>
  <ul>
    {posts.map((post) => (
        <li>
          <Article
            url={post.url}
            title={post.frontmatter.title}
            pubDate={post.frontmatter.pubDate}
            tags={post.frontmatter.tags}
          />
        </li>
      ))}
  </ul>
</Layout>
